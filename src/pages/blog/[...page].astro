---
import type { MDXInstance, GetStaticPathsOptions, Page } from 'astro';
import clsx from 'clsx';

import BaseLayout from '~/layouts/BaseLayout.astro';
import Container from '~/shared/components/Container.astro';
import BlogPostCard from '~/shared/components/BlogPostCard.astro';
import Paginator from '~/shared/components/Paginator.astro';

import { parseBlogPost, PostFrontmatter, sortPosts } from '~/shared/utils/blogPostsHelpers';
import type { Post } from '~/shared/utils/blogPostsHelpers';

interface PageProps {
	page: Page<MDXInstance<Post>>;
}

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const data = await Astro.glob<PostFrontmatter>('./*.mdx');

	const allPosts = await Promise.all(data.map(parseBlogPost));
	const sortedPosts = allPosts.sort(sortPosts);

	return paginate(sortedPosts, { pageSize: 12 });
}

const { page } = Astro.props as PageProps;
---

<BaseLayout>
	<Container as="div" class="my-8">
		<h1 class="mb-3">My Blog</h1>
		<p class="prose dark:prose-invert">
			Here are all the posts I've published since starting this blog.
		</p>
		<hr class="my-4 dark:border-neutral-100/10" />

		<section>
			<h2 class="mb-3">All My Posts</h2>

			<p class="mb-6">
				In total, I've written <strong class="">{page.total}</strong> articles in this blog. You can
				find them all below, or by searching for a post title.
			</p>

			<!-- Search bar -->
			<form>
				<label
					for="search-post"
					class="mb-2 text-sm font-medium text-neutral-900 sr-only dark:text-neutral-300"
					>Search</label
				>
				<div class="relative">
					<div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
						<svg
							aria-hidden="true"
							class="w-5 h-5 text-gray-500 dark:text-gray-400"
							fill="none"
							stroke="currentColor"
							viewBox="0 0 24 24"
							xmlns="http://www.w3.org/2000/svg"
							><path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
						</svg>
					</div>
					<input
						id="search-post"
						type="text"
						placeholder="Search posts by names..."
						aria-label="Search posts by names"
						class={clsx(
							'block p-4 pl-10 w-full text-sm text-gray-900 bg-neutral-50 rounded-md',
							'boder boder-gray-300 focus:ring-accent focus:border-accent',
							'dark:bg-neutral-700 dark:border-neutral-600 dark:placeholder:neutral-400',
							'dark:text-typography dark:focus:ring-accent dark:focus:border-accent'
						)}
					/>
				</div>
			</form>

			<div class="mt-10">
				<ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-10 lg:gap-6 my-4">
					{
						page.data.map((post) => {
							return (
								<li id="post-item">
									<BlogPostCard post={post} />
								</li>
							);
						})
					}
				</ul>
			</div>

			<Paginator page={page} />
		</section>
	</Container>
</BaseLayout>

<script type="module">
	// This script is used to add a search bar to the blog page
	const searchInput = document.getElementById('search-post');

	function debounce(fn, timeout = 150) {
		let timer;

		return (...args) => {
			clearTimeout(timer);
			timer = setTimeout(() => fn.apply(this, args), timeout);
		};
	}

	searchInput.addEventListener(
		'input',
		debounce((event) => {
			const query = event.target.value.toLowerCase();

			const allPosts = document.querySelectorAll('#post-item');

			allPosts.forEach((post) => {
				const title = post.querySelector('h3').textContent.toLowerCase();

				if (title.includes(query)) {
					post.classList.remove('hidden');
				} else {
					post.classList.add('hidden');
				}
			});
		})
	);
</script>
